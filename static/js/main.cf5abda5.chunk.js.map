{"version":3,"sources":["view_components/CenteredContainer/styles.module.css","routes/HomeRoute/styles.module.css","store/BaseStore.js","store/PlayerStore.js","use_cases/addPlayer.js","view_components/CenteredContainer/index.js","entities/Game.js","store/GameStore.js","use_cases/getGame.js","routes/JoinRoute.js","use_cases/getPlayer.js","store/AnswerStore.js","utils/popKey.js","store/QuestionStore.js","use_cases/addAnswer.js","routes/PlayerRoute.js","routes/HomeRoute/index.js","use_cases/getLobbyPlayers.js","routes/LobbyRoute.js","store/UserStore.js","use_cases/signupUser.js","use_cases/loginUser.js","routes/LoginRoute.js","use_cases/getCurrentUser.js","use_cases/getCurrentUserGames.js","routes/MyGamesRoute.js","use_cases/createGame.js","routes/CreateGameRoute.js","use_cases/startNextQuestion.js","utils/calculateTimeLeft.js","routes/PendingQuestionRoute.js","use_cases/getQuestion.js","use_cases/calculateQuestionResults.js","use_cases/countTotalQuestions.js","routes/QuestionResultsRoute.js","use_cases/calculateFinalResults.js","routes/FinalResultsRoute.js","use_cases/showCurrentQuestion.js","view_components/Question.js","routes/CurrentQuestionRoute.js","routes/HostRoute.js","use_cases/getQuestions.js","use_cases/saveQuestion.js","view_components/EditableQuestion.js","routes/GameDetailsRoute.js","routes/FindGameRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","require","FIREBASE_CONFIG","JSON","parse","process","BaseStore","props","apps","length","initializeApp","this","firestore","auth","PlayerStore","playerId","scopes","collection","doc","gameId","get","then","_convertDocToPlayer","attributes","chain","add","playerRef","onChange","limit","undefined","onSnapshot","playersSnapshot","players","forEach","playerDoc","push","snapshot","docs","map","p","_convertDocToQuestion","Object","assign","id","data","addPlayer","create","CenteredContainer","Container","className","styles","centered","style","maxWidth","height","verticalCentered","children","Game","GameStore","name","ownerId","state","STATE_DRAFT","ref","_convertDocToGame","_getGameDoc","gameDoc","where","a","currentQuestion","currentQuestionId","update","game","path","getGame","JoinForm","playerName","setPlayerName","joinGame","Form","onSubmit","e","preventDefault","FormGroup","Label","Input","value","target","Button","color","type","JoinRoute","useParams","useState","setPlayerId","setGame","useEffect","to","getPlayer","AnswerStore","_popAttr","questionId","player","join","question","answerRef","_convertDocToAnswer","answerDoc","obj","attr","val","popKey","key","QuestionStore","addAttrs","questionDoc","attributesCopy","qnRef","qnDoc","from","orderBy","q","addAttributes","addAnswer","questionStore","isCorrect","correctAnswer","choice","console","log","AnswerGrid","recordAnswer","Row","ans","Col","sm","md","onClick","PlayerRoute","currentGame","setCurrentGame","answer","setAnswer","errorMessage","setErrorMessage","handleGameChange","catch","setTimeout","Alert","HomeRoute","setGameId","hero_heading","for","disabled","getLobbyPlayers","playerStore","gameStore","list","PlayerList","ListGroup","ListGroupItem","LobbyRoute","setPlayers","joinUrl","window","location","origin","href","rel","UserStore","email","password","createUserWithEmailAndPassword","userCredentials","firebaseUser","user","_convertUser","error","errorCode","code","message","alert","signInWithEmailAndPassword","handleChange","onAuthStateChanged","uid","displayName","signupUser","loginUser","login","handleSubmit","event","authFn","successCallback","SignupForm","onUserChange","setEmail","setPassword","f","LoginForm","LoginRoute","isExistingUser","setIsExistingUser","setUser","toggleForm","getCurrentUser","userStore","Promise","resolve","onCurrentUserChange","getCurrentUserGames","MyGamesRoute","games","setGames","redirectUrl","setRedirectUrl","tag","action","createGame","CreateGameRoute","gameName","setGameName","gameAttributes","onCreate","startNextQuestion","nextOrder","order","questionArray","tickTimer","endDate","intervalCallback","endedCallback","timeLeft","date","difference","Date","now","calculateTimeLeft","startTimer","seconds","PendingQuestionRoute","parentUrl","setTimeLeft","nextQuestion","setNextQuestion","Math","ceil","getQuestion","calculateQuestionResults","answerStore","answers","results","concat","countTotalQuestions","questions","isCorrectChoice","ResultBoard","result","text","entries","Card","inverse","CardBody","CardTitle","CardText","QuestionResultsRoute","setResult","setQuestion","totalQuestionCount","setTotalQuestionCount","calculateFinalResults","filter","reduce","acc","curr","sortScores","b","score1","score2","Leaderboard","scores","sort","slice","index","Badge","FinalResultsRoute","setResults","showCurrentQuestion","Question","ShowResultsBtn","isVisible","linkTo","CurrentQuestionRoute","HostRoute","useRouteMatch","url","base","getQuestions","saveQuestion","EditableQuestion","draftQuestion","setDraftQuestion","componentState","setComponentState","updateDraft","newAttributes","body","InputGroup","placeholder","ansKey","InputGroupAddon","addonType","InputGroupText","data-testid","Spinner","size","GameDetailsRoute","setQuestions","newQn","FindGameRoute","gameIdPrefix","URLSearchParams","useLocation","search","App","exact","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf5abda5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"centered\":\"styles_centered__x3bzC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero_heading\":\"styles_hero_heading__1odbt\"};","const firebase = require('firebase');\n\nconst FIREBASE_CONFIG = JSON.parse(process.env.REACT_APP_FIREBASE_CONFIG);\n\n\nclass BaseStore {\n  constructor(props) {\n    // workaround to prevent initializing multiple times\n    if (!firebase.apps.length) {\n      firebase.initializeApp(FIREBASE_CONFIG);\n      // firebase.firestore.setLogLevel('debug');\n    }\n\n    this.firestore = firebase.firestore();\n    this.auth = firebase.auth();\n  }\n}\n\nexport default BaseStore;\n","import BaseStore from './BaseStore';\n\nclass PlayerStore extends BaseStore {\n  get(playerId, scopes = {}) {\n    return this.firestore\n      .collection('games')\n      .doc(scopes.gameId)\n      .collection('players')\n      .doc(playerId)\n      .get()\n      .then(this._convertDocToPlayer)\n  }\n\n  create(attributes = {}) {\n    let chain = this.firestore;\n    if ('gameId' in attributes) {\n      const gameId = attributes.gameId;\n      delete attributes.gameId;\n\n      chain = chain.collection('games').doc(gameId).collection('players');\n    }\n\n    return chain\n      .add(attributes)\n      .then(playerRef => playerRef.get())\n      .then(this._convertDocToPlayer)\n  }\n\n  list(scopes = {}, onChange) {\n    let chain = this.firestore;\n    if ('gameId' in scopes) {\n      chain = chain.collection('games').doc(scopes.gameId);\n    }\n    chain = chain.collection('players');\n\n    if ('limit' in scopes) {\n      chain = chain.limit(scopes.limit);\n    }\n\n    if (onChange !== undefined) {\n      return chain.onSnapshot(playersSnapshot => {\n        let players = [];\n        playersSnapshot.forEach(playerDoc => players.push(this._convertDocToPlayer(playerDoc)));\n        onChange(players);\n      });\n    }\n\n    return chain\n      .get()\n      .then(snapshot => snapshot.docs.map((p) => this._convertDocToQuestion(p)))\n  }\n\n  _convertDocToPlayer(playerDoc) {\n    return Object.assign({ id: playerDoc.id }, playerDoc.data());\n  }\n}\n\nexport default PlayerStore;\n","import PlayerStore from '../store/PlayerStore';\n\n\nconst addPlayer = (attributes) => {\n  return new PlayerStore().create(attributes);\n};\n\nexport default addPlayer;\n","import React from 'react';\nimport { Container } from 'reactstrap';\n\nimport styles from './styles.module.css';\n\n/**\n * Vertically and horizontally centered container. Parent height should be 100%.\n */\nconst CenteredContainer = props => {\n  return (\n    <Container className={styles.centered} style={{ maxWidth: props.maxWidth || null, height: props.verticalCentered ? \"100%\" : null }}>\n      {props.children}\n    </Container>\n  );\n};\n\nexport default CenteredContainer;\n\n","export default class Game {\n  static get STATE_DRAFT() { return 'draft' }\n}\n","import BaseStore from './BaseStore';\nimport Game from '../entities/Game';\n\n\nclass GameStore extends BaseStore {\n  create(attributes = {}) {\n    const { name, ownerId } = attributes;\n\n    return this.firestore\n      .collection('games')\n      .add({ name, ownerId, state: Game.STATE_DRAFT})\n      .then(ref => ref.get())\n      .then(this._convertDocToGame)\n  }\n\n  /**\n   *\n   *\n   * @param {String} gameId\n   * @param {Function} onChange - if provided, will trigger when Game is updated\n   * @returns\n   * @memberof GameStore\n   */\n  get(gameId, onChange) {\n    const doc = this._getGameDoc(gameId)\n\n    if (onChange !== undefined) {\n      return doc.onSnapshot(gameDoc => onChange(this._convertDocToGame(gameDoc)));\n    }\n\n    return doc.get().then(this._convertDocToGame);\n  }\n\n  list(scopes = {}) {\n    let chain = this.firestore.collection('games');\n\n    if ('ownerId' in scopes) {\n      // FIXME: ideally this would be independent of the gameId\n      chain = chain.where(\"ownerId\", \"==\", scopes.ownerId);\n    }\n\n    if ('limit' in scopes) {\n      chain = chain.limit(scopes.limit);\n    }\n\n    return chain\n      .get()\n      .then(snapshot => snapshot.docs.map((a) => this._convertDocToGame(a)))\n  }\n\n  update(gameId, attributes) {\n    const doc = this._getGameDoc(gameId);\n\n    if ('currentQuestionId' in attributes) {\n      attributes.currentQuestion = doc.collection('questions').doc(attributes.currentQuestionId);\n      delete attributes.currentQuestionId;\n    }\n\n    return doc.update(attributes);\n  }\n\n  _getGameDoc(gameId) {\n    return this.firestore\n      .collection('games')\n      .doc(gameId);\n  }\n\n  _convertDocToGame(gameDoc) {\n    let game = Object.assign({ id: gameDoc.id }, gameDoc.data());\n    if ('currentQuestion' in game) {\n      game.currentQuestionId = game.currentQuestion.id;\n      game.currentQuestion = game.currentQuestion.path;  // TODO: remove this\n    }\n    return game;\n  }\n}\n\nexport default GameStore;\n","import GameStore from '../store/GameStore';\n\n\nconst getGame = (gameId, onChange) => {\n  return new GameStore().get(gameId, onChange);\n};\n\nexport default getGame;\n","import React, { useState, useEffect } from 'react'\nimport { useParams, Redirect } from \"react-router-dom\"\nimport { Button, FormGroup, Label, Input, Form } from 'reactstrap';\n\nimport addPlayer from '../use_cases/addPlayer';\nimport CenteredContainer from '../view_components/CenteredContainer';\nimport getGame from '../use_cases/getGame';\n\n\nconst JoinForm = ({ playerName, setPlayerName, joinGame }) => {\n  return (\n    <Form onSubmit={e => {\n      e.preventDefault();\n      joinGame();\n    }}>\n      <FormGroup>\n        <Label>Your Nickname:</Label>\n        <Input\n          value={playerName}\n          onChange={e => setPlayerName(e.target.value)}\n        />\n      </FormGroup>\n      <Button color=\"primary\" type=\"submit\">JOIN</Button>\n    </Form>\n  )\n}\n\nconst JoinRoute = () => {\n  let { gameId } = useParams();\n  const [playerName, setPlayerName] = useState('');\n  const [playerId, setPlayerId] = useState('');\n  const [game, setGame] = useState(null);\n\n  useEffect(() => {\n    if (gameId && game === null) {\n      getGame(gameId).then(setGame);\n    }\n  }, [gameId, game])\n\n  return (\n    <CenteredContainer maxWidth={500} verticalCentered>\n      <h1>{game ? game.name : null}</h1>\n      {playerId ?\n          <Redirect\n            to={`/play/${gameId}/as/${playerId}`}\n          />\n        : <JoinForm\n          playerName={playerName}\n          setPlayerName={setPlayerName}\n          joinGame={() => addPlayer({ name: playerName, gameId }).then(p => setPlayerId(p.id))}\n        />\n      }\n    </CenteredContainer>\n  )\n}\n\nexport default JoinRoute\n","import PlayerStore from '../store/PlayerStore';\n\n\nconst getPlayer = (playerId, scopes = {}) => {\n  return new PlayerStore().get(playerId, scopes);\n};\n\nexport default getPlayer;\n","import BaseStore from './BaseStore';\n\nclass AnswerStore extends BaseStore {\n  /**\n   * Creates an Answer.\n   *\n   * @param {Object} attributes - `gameId` will be used to nest the subcollection\n   *  and generate a fully qualified reference for `playerId` and `questionId`\n   * @returns Object - an \"Answer\" object\n   * @memberof AnswerStore\n   */\n  create(attributes) {\n    const gameId = this._popAttr(attributes, 'gameId');\n    const playerId = this._popAttr(attributes, 'playerId');\n    const questionId = this._popAttr(attributes, 'questionId');\n\n    const subcollection = this.firestore\n      .collection('games')\n      .doc(gameId)\n      .collection('answers');\n\n    return subcollection\n      .add(Object.assign({\n        player: this.firestore.doc(['/games', gameId, 'players', playerId].join('/')),\n        question: this.firestore.doc(['/games', gameId, 'questions', questionId].join('/'))\n      }, attributes))\n      .then(answerRef => answerRef.get())\n      .then(this._convertDocToAnswer)\n  }\n\n  list(scopes = {}) {\n    let chain = this.firestore;\n\n    if ('gameId' in scopes) {\n      chain = chain.collection('games').doc(scopes.gameId);\n    }\n    chain = chain.collection('answers');\n\n    if ('questionId' in scopes) {\n      // FIXME: ideally this would be independent of the gameId\n      chain = chain.where(\"question\", \"==\", this.firestore.doc(`games/${scopes.gameId}/questions/${scopes.questionId}`));\n    }\n\n    if ('limit' in scopes) {\n      chain = chain.limit(scopes.limit);\n    }\n\n    return chain\n      .get()\n      .then(snapshot => snapshot.docs.map((a) => this._convertDocToAnswer(a)))\n  }\n\n  _convertDocToAnswer(answerDoc) {\n    return Object.assign({ id: answerDoc.id }, answerDoc.data());\n  }\n\n  _popAttr(obj, attr) {\n    const val = obj[attr];\n    delete obj[attr];\n    return val;\n  }\n}\n\nexport default AnswerStore;\n","export function popKey(obj, key) {\n  const value = obj[key];\n  delete obj[key];\n  return value;\n}\n","import BaseStore from './BaseStore';\nimport { popKey } from '../utils/popKey';\n\nclass QuestionStore extends BaseStore {\n  /**\n   * Retrieves a Question from the store\n   *\n   * @param {string} questionId - if a scope is not provided, this must be a\n   *   fully qualified ref, as there is no top-level questions collection.\n   * @param {Object} [scopes={}]\n   * @returns Object\n   * @memberof QuestionStore\n   */\n  get(questionId, scopes = {}) {\n    let chain = this.firestore;\n    let addAttrs = {};\n\n    if ('gameId' in scopes) {\n      chain = chain.collection('games').doc(scopes.gameId).collection('questions');\n      addAttrs['gameId'] = scopes.gameId;\n    }\n\n    return chain\n      .doc(questionId)\n      .get()\n      .then(questionDoc => this._convertDocToQuestion(questionDoc, addAttrs));\n  }\n\n  create(attributes) {\n    let attributesCopy = Object.assign({}, attributes);\n    const gameId = popKey(attributesCopy, 'gameId');\n\n    let collection = this.firestore.collection('games').doc(gameId).collection('questions');\n\n    return collection\n      .add(attributesCopy)\n      .then(qnRef => qnRef.get())\n      .then(qnDoc => this._convertDocToQuestion(qnDoc, { gameId }));\n  }\n\n  /**\n   * Update an object\n   *\n   * @param {String} questionId\n   * @param {Object} attributes\n   * @returns Promise<void>\n   * @memberof QuestionStore\n   */\n  update(questionId, attributes) {\n    let attributesCopy = Object.assign({}, attributes);\n    const gameId = popKey(attributesCopy, 'gameId');\n\n    let doc = this.firestore.collection('games').doc(gameId).collection('questions').doc(questionId);\n\n    return doc.update(attributesCopy);\n  }\n\n  list(scopes = {}) {\n    let chain = this.firestore;\n    let addAttrs = {};\n\n    if ('gameId' in scopes) {\n      chain = chain.collection('games').doc(scopes.gameId).collection('questions');\n      addAttrs['gameId'] = scopes.gameId;\n    }\n    if ('from' in scopes) {\n      chain = chain.where(\"order\", \">\", scopes.from);\n    }\n\n    chain = chain.orderBy(\"order\");\n\n    if ('limit' in scopes) {\n      chain = chain.limit(scopes.limit);\n    }\n\n    return chain\n      .get()\n      .then(snapshot => snapshot.docs.map((q) => this._convertDocToQuestion(q, addAttrs)));\n  }\n\n  _convertDocToQuestion(questionDoc, addAttributes = {}) {\n    return Object.assign({ id: questionDoc.id }, questionDoc.data(), addAttributes);\n  }\n}\n\nexport default QuestionStore;\n","import GameStore from '../store/GameStore';\nimport AnswerStore from '../store/AnswerStore';\nimport QuestionStore from '../store/QuestionStore';\n\n\n/**\n * Saves an Answer.\n *\n * @param {Object} attributes\n * @returns Object - an \"Answer\"\n */\nconst addAnswer = (attributes) => {\n  const questionStore = new QuestionStore();\n\n  return new GameStore()\n    .get(attributes.gameId)\n    .then(game => {\n      return questionStore.get(game.currentQuestionId, { gameId: game.id });\n    })\n    .then(question => {\n      attributes.isCorrect = question.correctAnswer === attributes.choice;\n      attributes.questionId = question.id;\n      console.log(attributes)\n      return new AnswerStore().create(attributes);\n    })\n};\n\nexport default addAnswer;\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from \"react-router-dom\"\nimport { Button, Row, Col, Alert } from 'reactstrap';\n\nimport getPlayer from '../use_cases/getPlayer';\nimport addAnswer from '../use_cases/addAnswer';\nimport getGame from '../use_cases/getGame';\nimport CenteredContainer from '../view_components/CenteredContainer';\n\n\nconst AnswerGrid = ({ recordAnswer }) => {\n  return (\n    <Row>\n      {\n        ['A', 'B', 'C', 'D'].map((ans) =>\n          <Col sm={12} md={6} className=\"mb-4\" key={ans}>\n            <Button\n              className=\"w-100 h-100\"\n              onClick={() => recordAnswer(ans)}>\n                <strong>{ans}</strong>\n            </Button>\n          </Col>\n        )\n      }\n    </Row>\n  )\n}\n\nconst PlayerRoute = () => {\n  let { gameId, playerId } = useParams()\n  const [currentGame, setCurrentGame] = useState();\n  const [playerName, setPlayerName] = useState('')\n  const [answer, setAnswer] = useState(null)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const handleGameChange = (game) => {\n    if (game) {\n      // workaround to clear answer\n      setAnswer(null);\n      setCurrentGame(game);\n    }\n  }\n\n  useEffect(() => {\n    if (gameId && playerId) {\n      getGame(gameId, handleGameChange);\n      getPlayer(playerId, { gameId })\n        .then(player => setPlayerName(player.name))\n    }\n  }, [gameId, playerId])\n\n  const recordAnswer = ans => {\n    // playerName is for convenience later, though it feels a little like this knows more about the store than it should\n    addAnswer({ playerId, playerName, gameId, choice: ans })\n      .then(setAnswer)\n      .catch(e => {\n        setErrorMessage(e)\n        setTimeout(() => setErrorMessage(''), 5000)\n      })\n  }\n\n  switch (currentGame ? currentGame.state : null) {\n    case 'pendingQuestion':\n      return (\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\n          Next question coming up...\n        </CenteredContainer>\n      )\n    case 'showingQuestion':\n      if (answer) {\n        return (\n          <CenteredContainer maxWidth={500} verticalCentered={true}>\n            You chose {answer.choice}!\n          </CenteredContainer>\n        )\n      }\n\n      return (\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\n          <Row className=\"mb-4\">\n            <Col sm={12}>\n              <h2>Hi {playerName}!</h2>\n              <h3>Choose your answer:</h3>\n            </Col>\n          </Row>\n          <AnswerGrid recordAnswer={recordAnswer}/>\n          {errorMessage ? <Alert color=\"danger\">{errorMessage}</Alert> : null}\n        </CenteredContainer>\n      );\n    case 'showingQuestionResults':\n      return (\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\n          <div>Showing question results...</div>\n        </CenteredContainer>\n      );\n\n    default:\n      return (\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\n          Waiting for game to start...\n        </CenteredContainer>\n      )\n  }\n}\n\nexport default PlayerRoute\n","import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\"\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nimport CenteredContainer from '../../view_components/CenteredContainer';\nimport styles from './styles.module.css'\n\n\nconst HomeRoute = props => {\n  const [gameId, setGameId] = useState(null);\n\n  return (\n    <CenteredContainer maxWidth={500} verticalCentered={true}>\n      <h1 className={styles.hero_heading}>Cahoots!</h1>\n      <Form className=\"mb-5\">\n        <FormGroup>\n          <Label for=\"gameId\">Game ID:</Label>\n          <Input id=\"gameId\" value={gameId} onChange={e => setGameId(e.target.value)} />\n        </FormGroup>\n        <Link to={`/join/${gameId}`}>\n          <Button color=\"primary\" disabled={!gameId}>Find Game</Button>\n        </Link>\n      </Form>\n      <Link to=\"/login\">\n        Sign Up\n      </Link>\n    </CenteredContainer>\n  )\n}\n\nexport default HomeRoute\n","import PlayerStore from '../store/PlayerStore';\nimport GameStore from '../store/GameStore';\n\n\nconst getLobbyPlayers = (gameId, onChange, playerStore = new PlayerStore(), gameStore = new GameStore()) => {\n  gameStore.update(gameId, { state: 'waitingForPlayers' });\n  return playerStore.list({ gameId }, onChange);\n};\n\nexport default getLobbyPlayers;\n","import React, { useState, useEffect } from 'react'\nimport { useParams, Link } from \"react-router-dom\"\nimport { Button, ListGroup, ListGroupItem } from 'reactstrap';\n\nimport getLobbyPlayers from '../use_cases/getLobbyPlayers';\nimport CenteredContainer from '../view_components/CenteredContainer';\n\n\nconst PlayerList = ({ players }) => {\n  return (\n    <ListGroup>\n      {\n        players.map(player => (\n          <ListGroupItem key={player.id}>{player.name}</ListGroupItem>\n        ))\n      }\n    </ListGroup>\n  );\n}\n\n\nconst LobbyRoute = props => {\n  let { gameId } = useParams();\n  const [players, setPlayers] = useState([]);\n  const joinUrl = `${window.location.origin}/cahoots/#/join/${gameId}/`;\n\n  useEffect(() => {\n    if (gameId) {\n      getLobbyPlayers(gameId, setPlayers);\n    }\n  }, [gameId])\n\n  return (\n    <CenteredContainer verticalCentered={true} maxWidth={800}>\n      <h1 className=\"mb-4\">Waiting for Players to join...</h1>\n      <p>To join, go to <a href={joinUrl} rel=\"noopener noreferrer\" target=\"_blank\">{joinUrl}</a></p>\n      <PlayerList players={players} />\n      <div className=\"mt-4\">\n        <Link to={`/host/${gameId}/questions/pending`}>\n          <Button color=\"primary\">Start</Button>\n        </Link>\n      </div>\n    </CenteredContainer>\n  )\n}\n\nexport default LobbyRoute\n","import BaseStore from './BaseStore';\n\nclass UserStore extends BaseStore {\n  create(attributes = {}) {\n    const { email, password } = attributes;\n\n    return this.auth\n      .createUserWithEmailAndPassword(email, password)\n      .then(userCredentials => {\n        const firebaseUser = userCredentials.user;\n        return this._convertUser(firebaseUser);\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // auth/email-already-in-use\n        // auth/invalid-email\n        // auth/operation-not-allowed\n        if (errorCode === 'auth/weak-password') {\n          alert('The password is too weak.');\n        } else {\n          alert(errorMessage);\n        }\n      });\n  }\n\n  login({ email, password }) {\n    return this.auth\n      .signInWithEmailAndPassword(email, password)\n      .then(userCredentials => {\n        const firebaseUser = userCredentials.user;\n        return this._convertUser(firebaseUser);\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // auth/email-already-in-use\n        // auth/invalid-email\n        // auth/operation-not-allowed\n        if (errorCode === 'auth/weak-password') {\n          alert('The password is too weak.');\n        } else {\n          alert(errorMessage);\n        }\n      });\n  }\n\n  onCurrentUserChange(handleChange) {\n    this.auth.onAuthStateChanged(user => {\n      if (user) {\n        handleChange(this._convertUser(user));\n      }\n    })\n  }\n\n  _convertUser(firebaseUser) {\n    return {\n      id: firebaseUser.uid,\n      email: firebaseUser.email,\n      name: firebaseUser.displayName,\n    };\n  }\n}\n\nexport default UserStore;\n","import UserStore from \"../store/UserStore\";\n\nconst signupUser = ({ email, password }) => {\n  const userStore = new UserStore();\n\n  return userStore.create({ email, password });\n}\n\nexport default signupUser;\n","import UserStore from \"../store/UserStore\";\n\nconst loginUser = ({ email, password }) => {\n  const userStore = new UserStore();\n\n  return userStore.login({ email, password });\n}\n\nexport default loginUser;\n","import React, { useState } from 'react'\nimport { Redirect } from \"react-router-dom\"\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport signupUser from '../use_cases/signupUser';\nimport loginUser from '../use_cases/loginUser';\nimport CenteredContainer from '../view_components/CenteredContainer';\n\nconst handleSubmit = (event, { email, password, authFn, successCallback }) => {\n  event.preventDefault();\n  authFn({ email, password })\n    .then(user => successCallback(user))\n}\n\nconst SignupForm = ({ onUserChange }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    <Form className=\"mb-5\" onSubmit={f => handleSubmit(f, { email, password, authFn: signupUser, successCallback: onUserChange })}>\n      <FormGroup>\n        <Label for=\"email\">Email:</Label>\n        <Input id=\"email\" name=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\n      </FormGroup>\n      <FormGroup>\n        <Label>Password:</Label>\n        <Input type=\"password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\n      </FormGroup>\n      <Button color=\"primary\">Sign Up</Button>\n    </Form>\n  );\n}\n\nconst LoginForm = ({ onUserChange }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    <Form className=\"mb-5\" onSubmit={f => handleSubmit(f, { email, password, authFn: loginUser, successCallback: onUserChange })}>\n      <FormGroup>\n        <Label for=\"email\">Email:</Label>\n        <Input id=\"email\" name=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\n      </FormGroup>\n      <FormGroup>\n        <Label>Password:</Label>\n        <Input type=\"password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\n      </FormGroup>\n      <Button color=\"primary\">Login</Button>\n    </Form>\n  );\n}\n\nconst LoginRoute = props => {\n  const [isExistingUser, setIsExistingUser] = useState(false);\n  const [user, setUser] = useState(null);\n\n  const toggleForm = event => {\n    event.preventDefault();\n    setIsExistingUser(!isExistingUser);\n  }\n\n  if (user) {\n    return <Redirect to='/games' />\n  } else if (isExistingUser) {\n    return (\n      <CenteredContainer maxWidth={500} verticalCentered>\n        <h1>Login to Cahoots!</h1>\n        <LoginForm onUserChange={setUser} />\n        <div>\n          No account? <br />\n          <Button color=\"link\" onClick={toggleForm}>Sign Up!</Button>\n        </div>\n      </CenteredContainer>\n    );\n  } else {\n    return (\n      <CenteredContainer maxWidth={500} verticalCentered>\n        <h1>Signup for Cahoots!</h1>\n        <SignupForm onUserChange={setUser} />\n        <div>\n          Have an account? <br />\n          <Button color=\"link\" onClick={toggleForm}>Login</Button>\n        </div>\n      </CenteredContainer>\n    );\n  }\n}\n\nexport default LoginRoute\n","import UserStore from \"../store/UserStore\";\n\nconst getCurrentUser = () => {\n  const userStore = new UserStore();\n\n  return new Promise(resolve => userStore.onCurrentUserChange(resolve));\n}\n\nexport default getCurrentUser;\n","\nimport GameStore from \"../store/GameStore\";\nimport getCurrentUser from \"./getCurrentUser\";\n\n\nconst getCurrentUserGames = () => {\n  const gameStore = new GameStore();\n\n  return getCurrentUser().then(user => user ? gameStore.list({ ownerId: user.id }) : null);\n}\n\nexport default getCurrentUserGames;\n","import React, { useState, useEffect } from 'react'\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\nimport getCurrentUserGames from '../use_cases/getCurrentUserGames';\nimport { Redirect } from 'react-router-dom';\n\n\nconst MyGamesRoute = () => {\n  const [games, setGames] = useState([]);\n  const [redirectUrl, setRedirectUrl] = useState(null);\n\n  useEffect(() => {\n    getCurrentUserGames().then(setGames);\n  }, []);\n\n  if (redirectUrl) {\n    return <Redirect to={redirectUrl} />;\n  } else {\n    return (\n      <Container style={{maxWidth: \"500px\"}}>\n        <h1>Your Games</h1>\n        <ListGroup>\n          {\n            games.map(game => (\n              <ListGroupItem\n                key={game.id}\n                onClick={() => setRedirectUrl(`/games/${game.id}`)}\n                tag=\"button\"\n                action\n              >\n                {game.name}\n              </ListGroupItem>\n            ))\n          }\n          <ListGroupItem\n            onClick={() => setRedirectUrl('/games/create')}\n            tag=\"button\"\n            color=\"info\"\n            action\n          >\n            Create Game\n          </ListGroupItem>\n        </ListGroup>\n      </Container>\n    )\n  }\n}\n\nexport default MyGamesRoute\n","import GameStore from '../store/GameStore';\n\n\nconst createGame = (attributes) => {\n  return new GameStore().create(attributes);\n};\n\nexport default createGame;\n","import React, { useState, useEffect } from 'react'\nimport { Container, FormGroup, Label, Input, Button } from 'reactstrap';\nimport getCurrentUser from '../use_cases/getCurrentUser';\nimport createGame from '../use_cases/createGame';\nimport { Redirect } from 'react-router-dom';\n\n\nconst save = (gameAttributes, onCreate) => {\n  return createGame(gameAttributes).then(onCreate);\n}\n\nconst CreateGameRoute = props => {\n  const [user, setUser] = useState(null);\n  const [gameName, setGameName] = useState('');\n  const [game, setGame] = useState(null);\n\n  useEffect(() => {\n    getCurrentUser().then(setUser);\n  }, []);\n\n  if (game) {\n    return <Redirect to=\"/games\" />;\n  } else {\n    return (\n      <Container style={{maxWidth: \"500px\"}}>\n        <h1>Create a Game</h1>\n        <FormGroup>\n          <Label for=\"name\">Name:</Label>\n          <Input id=\"name\" name=\"name\" value={gameName} onChange={e => setGameName(e.target.value)} />\n        </FormGroup>\n        <Button color=\"primary\" onClick={() => save({ name: gameName, ownerId: user.id }, setGame)}>Save</Button>\n      </Container>\n    )\n  }\n}\n\nexport default CreateGameRoute\n","import GameStore from '../store/GameStore';\nimport QuestionStore from '../store/QuestionStore';\n\nconst startNextQuestion = (gameId) => {\n  const gameStore = new GameStore();\n  const questionStore = new QuestionStore();\n\n  gameStore.update(gameId, { state: 'pendingQuestion' });\n  return gameStore\n    .get(gameId)\n    .then(game => {\n      if ('currentQuestion' in game) {\n        return questionStore.get(game.currentQuestion);\n      }\n      else {\n        return;\n      }\n    })\n    .then(currentQuestion => {\n      const nextOrder = currentQuestion ? currentQuestion.order : 0 ;\n      return questionStore.list({ gameId, from: nextOrder, limit: 1 });\n    })\n    .then(questionArray => {\n      const question = questionArray[0];\n      if (question) {\n        gameStore.update(gameId, { currentQuestionId: question.id });\n      }\n\n      return question;\n    });\n}\n\nexport default startNextQuestion;\n","const calculateTimeLeft = date => {\n  const difference = (date - Date.now()) / 1000;\n  return difference > 0 ? difference : 0;\n};\n\nconst tickTimer = ({ endDate, intervalCallback, endedCallback }) => {\n  setTimeout(() => {\n    // timeLeft is in seconds\n    const timeLeft = calculateTimeLeft(endDate);\n    if (timeLeft > 0) {\n      intervalCallback(timeLeft);\n      tickTimer({ endDate, intervalCallback, endedCallback });\n    }\n    else {\n      endedCallback(timeLeft);\n    }\n  }, 1000);\n};\n\nexport const startTimer = ({ seconds, intervalCallback, endedCallback }) => {\n  const endDate = new Date(Date.now() + 1000 * seconds);\n  tickTimer({ endDate, intervalCallback, endedCallback });\n};\n","import React, { useState, useEffect } from 'react'\nimport { useParams, Redirect } from \"react-router-dom\"\n\nimport startNextQuestion from '../use_cases/startNextQuestion';\nimport { startTimer } from '../utils/calculateTimeLeft';\nimport CenteredContainer from '../view_components/CenteredContainer';\n\nconst SECONDS_TO_QUESTION = 5;\n\nconst PendingQuestionRoute = ({ parentUrl }) => {\n  let { gameId } = useParams();\n  const [ timeLeft, setTimeLeft ] = useState(SECONDS_TO_QUESTION);\n  const [ nextQuestion, setNextQuestion ] = useState(null);\n\n  useEffect(() => {\n    if (gameId) {\n      startTimer({ seconds: SECONDS_TO_QUESTION, intervalCallback: setTimeLeft, endedCallback: setTimeLeft });\n      startNextQuestion(gameId).then(setNextQuestion);\n    }\n  }, [gameId])\n\n  return (\n    <CenteredContainer verticalCentered={true}>\n      <div className=\"mb-4\">Next question in...</div>\n      <div className=\"display-1\">\n        {Math.ceil(timeLeft)}\n      </div>\n      {timeLeft <= 0 && nextQuestion\n        ? <Redirect to={`${parentUrl}/questions/current`} />\n        : null\n      }\n    </CenteredContainer>\n  )\n}\n\nexport default PendingQuestionRoute\n","import QuestionStore from \"../store/QuestionStore\";\n\nconst getQuestion = (questionId, scopes, questionStore = new QuestionStore()) => {\n  return questionStore.get(questionId, scopes)\n};\n\nexport default getQuestion;\n","import GameStore from '../store/GameStore';\nimport AnswerStore from '../store/AnswerStore';\n\nconst calculateQuestionResults = (gameId, questionId, gameStore = new GameStore(), answerStore = new AnswerStore()) => {\n  gameStore.update(gameId, { state: 'showingQuestionResults' });\n  return answerStore\n    .list({ gameId, questionId })\n    .then(answers => {\n      let results = { 'A': [], 'B': [], 'C': [], 'D': []};\n      answers.forEach(answer => {\n        results[answer.choice] = results[answer.choice].concat(answer.playerName);\n      });\n      return results;\n    });\n}\n\nexport default calculateQuestionResults;\n","import QuestionStore from '../store/QuestionStore';\n\nconst countTotalQuestions = (gameId) => {\n  const questionStore = new QuestionStore();\n  return questionStore\n    .list({ gameId })\n    .then(questions => questions.length);\n}\n\nexport default countTotalQuestions;\n","import React, { useEffect, useState } from 'react'\nimport { useParams, Link } from \"react-router-dom\"\nimport { Button, Card, CardBody, Row, Col, CardTitle, CardText } from 'reactstrap';\n\nimport getQuestion from '../use_cases/getQuestion';\nimport calculateQuestionResults from '../use_cases/calculateQuestionResults';\nimport countTotalQuestions from '../use_cases/countTotalQuestions';\nimport CenteredContainer from '../view_components/CenteredContainer';\n\n\nconst isCorrectChoice = (question, choice) => {\n  return question.correctAnswer === choice;\n}\n\nconst ResultBoard = ({ result, className, question }) => {\n  return (\n    <div className={className}>\n      <h2 className=\"mb-4\">{question ? question.text : null}</h2>\n      <Row>\n        {\n          Object.entries(result).map(([answer, players]) => (\n            <Col sm={12} md={6} className=\"mb-4\">\n              <Card\n                color={isCorrectChoice(question, answer) ? 'success' : null}\n                inverse={isCorrectChoice(question, answer) ? true : null}\n              >\n                <CardBody>\n                  <CardTitle>\n                    <strong className='mr-2'>{answer}</strong>\n                    {isCorrectChoice(question, answer) ? '✔️' : '❌'}\n                  </CardTitle>\n                  <CardText>\n                    {players.join(', ')}\n                  </CardText>\n                </CardBody>\n              </Card>\n            </Col>\n          ))\n        }\n      </Row>\n    </div>\n  )\n}\n\nconst QuestionResultsRoute = ({ parentUrl }) => {\n  let { gameId, questionId } = useParams()\n  let [result, setResult] = useState({})\n  let [question, setQuestion] = useState(null)\n  let [totalQuestionCount, setTotalQuestionCount] = useState(null)\n\n  useEffect(() => {\n    if (gameId && questionId) {\n      getQuestion(questionId, { gameId }).then(setQuestion);\n      countTotalQuestions(gameId).then(setTotalQuestionCount);\n      calculateQuestionResults(gameId, questionId).then(setResult);\n    }\n  }, [gameId, questionId])\n\n  return (\n    <CenteredContainer verticalCentered={true}>\n      <ResultBoard className=\"mb-4\" result={result} question={question} />\n      {question && question.order >= totalQuestionCount ?\n        <Link to={`${parentUrl}/results/final`}>\n          <Button color=\"primary\">\n            Show Final Results\n          </Button>\n        </Link>\n        :\n        <Link to={`${parentUrl}/questions/pending`}>\n          <Button color=\"primary\">\n            Next Question\n          </Button>\n        </Link>\n      }\n    </CenteredContainer>\n  )\n}\n\nexport default QuestionResultsRoute\n\n// no result, no question, start button\n// no result, question, no buttons if time out, else show button if within time\n// have result, show result, hide question, next button (clears result)\n","import AnswerStore from '../store/AnswerStore';\n\n\n/**\n * Saves an Answer.\n *\n * @param {Object} attributes\n * @returns Object - an \"Answer\"\n */\nconst calculateFinalResults = (gameId) => {\n  const answerStore = new AnswerStore();\n\n  return answerStore.list({ gameId })\n    .then(answers => {\n      return answers\n        .filter(val => 'isCorrect' in val && !!val.isCorrect)\n        .reduce((acc, curr) => {\n          if (curr.playerName in acc) {\n            acc[curr.playerName] += 1;\n          } else {\n            acc[curr.playerName] = 1;\n          }\n          return acc;\n        }, {});\n    })\n};\n\nexport default calculateFinalResults;\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from \"react-router-dom\"\nimport { ListGroup, ListGroupItem, Badge } from 'reactstrap';\nimport calculateFinalResults from '../use_cases/calculateFinalResults';\nimport CenteredContainer from '../view_components/CenteredContainer';\n\n\n// Compares two Arrays of playerName, score in terms of ascending score.\nconst sortScores = (a, b) => {\n  const [, score1] = a;\n  const [, score2] = b;\n\n  if (score1 > score2) {\n    return -1;\n  }\n  if (score1 < score2) {\n    return 1;\n  }\n  // a must be equal to b\n  return 0;\n}\n\nconst Leaderboard = ({ results }) => {\n  let scores = Object.entries(results);\n  scores.sort(sortScores);\n\n  return (\n    <ListGroup>\n      {\n        scores.slice(0, 5).map(([key, value], index) => {\n          if (index <= 2) {\n            return <ListGroupItem key={key} className=\"d-flex justify-content-between\">{key}<Badge className=\"ml-4 p-2\" color=\"success\">{value}</Badge></ListGroupItem>;\n          } else {\n            return <ListGroupItem key={key} className=\"d-flex justify-content-between\">{key}<Badge className=\"ml-4 p-2\">{value}</Badge></ListGroupItem>;\n          }\n        })\n      }\n    </ListGroup>\n\n  );\n}\n\nconst FinalResultsRoute = props => {\n  let { gameId } = useParams()\n  let [results, setResults] = useState({})\n\n  useEffect(() => {\n    if (gameId) {\n      calculateFinalResults(gameId).then(setResults);\n    }\n  }, [gameId])\n\n  return (\n    <CenteredContainer verticalCentered={true} maxWidth={500}>\n      <h1>\n        Final Results\n      </h1>\n      <Leaderboard results={results} />\n    </CenteredContainer>\n  )\n}\n\nexport default FinalResultsRoute\n","import GameStore from '../store/GameStore';\nimport QuestionStore from '../store/QuestionStore';\n\nconst showCurrentQuestion = (gameId, gameStore = new GameStore(), questionStore = new QuestionStore()) => {\n  gameStore.update(gameId, { state: 'showingQuestion' });\n  return gameStore\n    .get(gameId)\n    .then(game => {\n      return questionStore.get(game.currentQuestion)\n    });\n}\n\nexport default showCurrentQuestion;\n","import React from 'react'\nimport { Card, CardBody, Row, Col, CardTitle, CardText } from 'reactstrap';\n\n\n\nconst Question = ({ question, className }) => (\n  <div className={className}>\n    <h2 className=\"mb-4\">{question.text}</h2>\n    <Row>\n      {\n        ['A', 'B', 'C', 'D'].map((ans) =>\n          <Col key={ans} sm={12} md={6} className=\"mb-4\">\n            <Card>\n              <CardBody>\n                <CardTitle><strong>{ans}</strong></CardTitle>\n                <CardText>\n                  {question[`answer${ans}`]}\n                </CardText>\n              </CardBody>\n            </Card>\n          </Col>\n        )\n      }\n    </Row>\n  </div>\n)\n\nexport default Question\n","import React, { useState, useEffect } from 'react'\nimport { useParams, Link } from \"react-router-dom\"\nimport { Button } from 'reactstrap';\n\nimport showCurrentQuestion from '../use_cases/showCurrentQuestion'\nimport Question from '../view_components/Question'\nimport { startTimer } from '../utils/calculateTimeLeft';\nimport CenteredContainer from '../view_components/CenteredContainer';\n\nconst SECONDS_TO_QUESTION = 10;\n\nconst ShowResultsBtn = ({ isVisible, linkTo }) => {\n  return isVisible ?\n    (\n      <Link to={linkTo}>\n        <Button color=\"primary\">Show Result</Button>\n      </Link>\n    ) : null\n}\n\nconst CurrentQuestionRoute = ({ parentUrl }) => {\n  let { gameId } = useParams();\n  const [question, setQuestion] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(SECONDS_TO_QUESTION);\n\n  useEffect(() => {\n    if (gameId) {\n      startTimer({ seconds: SECONDS_TO_QUESTION, intervalCallback: setTimeLeft, endedCallback: setTimeLeft });\n      showCurrentQuestion(gameId).then(setQuestion);\n    }\n  }, [gameId])\n\n  return (\n    <CenteredContainer verticalCentered={true}>\n      {question ?\n          <div>\n            <Question question={question} />\n            <div className=\"mt-4\">Time left:</div>\n            <div className=\"display-1\">\n              {Math.ceil(timeLeft)}\n            </div>\n            <ShowResultsBtn\n              isVisible={timeLeft <= 0}\n              linkTo={`${parentUrl}/results/${question.id}`}\n            />\n          </div>\n        : <div>Loading...</div>\n      }\n    </CenteredContainer>\n  )\n}\n\nexport default CurrentQuestionRoute\n","import React from 'react'\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\n\nimport PendingQuestionRoute from './PendingQuestionRoute';\nimport QuestionResultsRoute from './QuestionResultsRoute';\nimport FinalResultsRoute from './FinalResultsRoute';\nimport CurrentQuestionRoute from './CurrentQuestionRoute';\n\n\nconst HostRoute = () => {\n  let { url, path } = useRouteMatch();\n\n  return (\n    <Switch base>\n      <Route path={`${path}/questions/pending`}>\n        <PendingQuestionRoute parentUrl={url} />\n      </Route>\n      <Route path={`${path}/questions/current`}>\n        <CurrentQuestionRoute parentUrl={url} />\n      </Route>\n      <Route path={`${path}/results/final`}>\n        <FinalResultsRoute parentUrl={url} />\n      </Route>\n      <Route path={`${path}/results/:questionId`}>\n        <QuestionResultsRoute parentUrl={url} />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default HostRoute\n","import QuestionStore from \"../store/QuestionStore\";\n\nconst getQuestions = (scopes) => {\n  const questionStore = new QuestionStore();\n  return questionStore.list(scopes)\n};\n\nexport default getQuestions;\n","import QuestionStore from \"../store/QuestionStore\";\nimport { popKey } from '../utils/popKey';\n\n/**\n * Creates a new Question or saves an existing one.\n *\n * @param {Object} attributes - should minimally contain `gameId`. If no `id` is included, is assumed to be a new Question\n * @returns Promise - resolves to either Object or void\n */\nconst saveQuestion = (attributes, questionStore = new QuestionStore()) => {\n  let attributesCopy = Object.assign({}, attributes);\n\n  if ('id' in attributesCopy) {\n    const questionId = popKey(attributesCopy, 'id');\n    return questionStore.update(questionId, attributesCopy);\n  } else {\n    return questionStore.create(attributesCopy);\n  }\n};\n\nexport default saveQuestion;\n","import React, { useState } from 'react';\nimport { InputGroup, InputGroupAddon, InputGroupText, Input, Card, CardTitle, Button, Spinner, FormGroup, Label } from 'reactstrap';\nimport saveQuestion from '../use_cases/saveQuestion';\n\nconst STATE_DEFAULT = 'default';\nconst STATE_SAVING = 'saving';\n\n\nexport const EditableQuestion = ({ question }) => {\n  const [draftQuestion, setDraftQuestion] = useState(question)\n  const [componentState, setComponentState] = useState(STATE_DEFAULT);\n\n  const updateDraft = (newAttributes) => {\n    setDraftQuestion(Object.assign({}, draftQuestion, newAttributes));\n  }\n\n  return (\n    <div>\n      <Card body className=\"mt-4 mb-4\">\n        <CardTitle>\n          <InputGroup className=\"mb-2\">\n            <Input\n              type=\"textarea\"\n              placeholder=\"Question text\"\n              value={draftQuestion.text || ''}\n              onChange={e => updateDraft({ text: e.target.value })}\n            />\n          </InputGroup>\n        </CardTitle>\n        {['answerA', 'answerB', 'answerC', 'answerD'].map((ansKey) => (\n          <InputGroup key={ansKey} className=\"mb-2\">\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>{ansKey}</InputGroupText>\n            </InputGroupAddon>\n            <Input\n              placeholder=\"Answer\"\n              value={ansKey in draftQuestion ? draftQuestion[ansKey] : ''}\n              onChange={e => updateDraft({[ansKey]: e.target.value})}\n            />\n          </InputGroup>\n        ))}\n        <FormGroup>\n          <Label for=\"correctAnswerDropdown\">Correct Answer</Label>\n          <Input\n            type=\"select\"\n            name=\"correctAnswer\"\n            id=\"correctAnswerDropdown\"\n            data-testid=\"correctAnswerDropdown\"\n            value={draftQuestion.correctAnswer || ''}\n            onChange={e => updateDraft({ correctAnswer: e.target.value })}\n          >\n            <option>A</option>\n            <option>B</option>\n            <option>C</option>\n            <option>D</option>\n          </Input>\n        </FormGroup>\n        {componentState === STATE_SAVING ?\n          <Button disabled color=\"primary\" className=\"mt-4\">\n            <Spinner type=\"grow\" size=\"sm\" color=\"info\" className=\"mr-2\" />\n            Saving...\n          </Button>\n          :\n          <Button\n            color=\"primary\"\n            className=\"mt-4\"\n            onClick={() => {\n              setComponentState(STATE_SAVING);\n              saveQuestion(draftQuestion).then(() => setComponentState(STATE_DEFAULT));\n            }}\n          >\n            Save\n          </Button>\n        }\n      </Card>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react'\nimport { Button } from 'reactstrap';\nimport { Link, useParams } from 'react-router-dom';\nimport getGame from '../use_cases/getGame';\nimport getQuestions from '../use_cases/getQuestions';\nimport { EditableQuestion } from '../view_components/EditableQuestion';\nimport saveQuestion from '../use_cases/saveQuestion';\nimport CenteredContainer from '../view_components/CenteredContainer';\n\nconst GameDetailsRoute = props => {\n  const { gameId } = useParams();\n  const [game, setGame] = useState(null);\n  const [questions, setQuestions] = useState([]);\n\n  useEffect(() => {\n    if (gameId && game === null) {\n      getGame(gameId)\n        .then(game => {\n          setGame(game);\n          return game;\n        })\n        .then(game => getQuestions({ gameId: game.id }))\n        .then(setQuestions);\n    }\n  }, [gameId, game]);\n\n  if (game) {\n    return (\n      <CenteredContainer maxWidth={500}>\n        <h1 className=\"mb-4\">{game.name}</h1>\n        {questions.length > 0\n          ? <Link to={`/lobby/${gameId}`}>\n              <Button color=\"success\" size=\"lg\">\n                Start Game\n              </Button>\n            </Link>\n          : null\n        }\n        {questions.map(question => <EditableQuestion key={question.id} question={question}/>)}\n        <Button\n          onClick={() => {\n            saveQuestion({ gameId: gameId, order: questions.length + 1 })\n              .then(newQn => setQuestions(questions.concat([newQn])))\n          }}\n        >\n          Add Question\n        </Button>\n      </CenteredContainer>\n    );\n  } else {\n    return (<CenteredContainer maxWidth={500}>Loading...</CenteredContainer>)\n  }\n}\n\nexport default GameDetailsRoute\n","import React, { useState } from 'react'\nimport { Redirect, useLocation } from \"react-router-dom\"\nimport { Button, FormGroup, Label, Input } from 'reactstrap';\n\nimport CenteredContainer from '../view_components/CenteredContainer';\n\n\nconst useQueryParams = key => {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst FindGameRoute = props => {\n  const queryParams = useQueryParams();\n  const gameIdPrefix = queryParams.get('game');\n\n  return (\n    <CenteredContainer maxWidth={500} verticalCentered>\n      {gameIdPrefix}\n    </CenteredContainer>\n  )\n}\n\nexport default FindGameRoute;\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport JoinRoute from './routes/JoinRoute'\nimport PlayerRoute from './routes/PlayerRoute'\nimport HomeRoute from './routes/HomeRoute';\nimport LobbyRoute from './routes/LobbyRoute';\nimport LoginRoute from './routes/LoginRoute';\nimport MyGamesRoute from './routes/MyGamesRoute';\nimport CreateGameRoute from './routes/CreateGameRoute';\nimport HostRoute from './routes/HostRoute';\nimport GameDetailsRoute from './routes/GameDetailsRoute';\nimport FindGameRoute from './routes/FindGameRoute';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/login\">\n            <LoginRoute />\n          </Route>\n          <Route path=\"/host/:gameId\">\n            <HostRoute />\n          </Route>\n          <Route path=\"/lobby/:gameId\">\n            <LobbyRoute />\n          </Route>\n          <Route path=\"/play/:gameId/as/:playerId\">\n            <PlayerRoute />\n          </Route>\n          <Route path=\"/join/:gameId\">\n            <JoinRoute />\n          </Route>\n          <Route path=\"/join\">\n            <FindGameRoute />\n          </Route>\n          <Route path=\"/games/create\">\n            <CreateGameRoute />\n          </Route>\n          <Route path=\"/games/:gameId\">\n            <GameDetailsRoute />\n          </Route>\n          <Route exact path=\"/games\">\n            <MyGamesRoute />\n          </Route>\n          <Route path=\"/\">\n            <HomeRoute />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}